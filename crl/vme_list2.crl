#  Source for generic VME readout using a
#  TJNAF trigger supervisor interface register (TIR)
#  as a source for external interrupts
#
#    David Abbott, TJNAF 1996

readout list VME1
maximum 1024,500
vme readout
ts control

const TIR_ADDR = 0x0ed0

# Define tsP pointer even if there is no TS in the Crate
struct vme_ts2 *tsP;

extern int bigendian_out;

begin download

  variable res

# If the ROC is sending data to Little-Endian EB
# e.g. a x86 Linux CPU then bigendian_out = 0.
# Unless the ROC is also running on a Little-Endian
# machine. Then set bigendian_out=1.
  bigendian_out = 0;


# Setup TIR
  tirInit(TIR_ADDR);
  
  log inform "User Download Executed"

end download
    
begin prestart

  log inform "Entering User Prestart"

  init trig source VME
  link async trig source VME 1 to usrtrig and usrtrig_done
  event type 1 then read VME 1

  log inform "User Prestart Executed"

end prestart

begin end

  CDODISABLE(VME,1,0);

  log inform "User End Executed"

end end

begin pause

  CDODISABLE(VME,1,0);

  log inform "User Pause Executed"

end pause

begin go
  
  log inform "Entering User Go"
  
  CDOENABLE(VME,1,0);

end go

begin trigger usrtrig
 
  variable ii, event_ty, event_no

 event_ty = EVTYPE;
 event_no = *rol->nevents;

 rol->dabufp = (long *) 0;
 open event type EVTYPE of BT_UI4

  output hex da000022
  rol->dabufp += 20;
  output hex da0000ff

 close event

end trigger

begin done usrtrig

end done


begin done

# Acknowledge tir register
  CDOACK(VME,1,0);

end done

begin status

end status


